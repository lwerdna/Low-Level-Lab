// generated by Fast Light User Interface Designer (fluid) version 1.0303

#ifndef Gui_h
#define Gui_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Text_Editor.H>
#include <FL/Fl_Text_Display.H>
#include <FL/Fl_Tabs.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Input_Choice.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Round_Button.H>

class Gui {
public:
  Fl_Double_Window* make_window();
  Fl_Text_Editor *srcCode;
  Fl_Text_Display *asmCode;
  Fl_Text_Display *outLog;
  Fl_Group *clangGroup;
  Fl_Input_Choice *icOptimization;
private:
  inline void cb_icOptimization_i(Fl_Input_Choice*, void*);
  static void cb_icOptimization(Fl_Input_Choice*, void*);
public:
  Fl_Input_Choice *icCompiler;
private:
  inline void cb_icCompiler_i(Fl_Input_Choice*, void*);
  static void cb_icCompiler(Fl_Input_Choice*, void*);
public:
  Fl_Check_Button *btnVerbose;
private:
  inline void cb_btnVerbose_i(Fl_Check_Button*, void*);
  static void cb_btnVerbose(Fl_Check_Button*, void*);
public:
  Fl_Input_Choice *icDebug;
private:
  inline void cb_icDebug_i(Fl_Input_Choice*, void*);
  static void cb_icDebug(Fl_Input_Choice*, void*);
public:
  Fl_Round_Button *btnC;
private:
  inline void cb_btnC_i(Fl_Round_Button*, void*);
  static void cb_btnC(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *btnCPP;
private:
  inline void cb_btnCPP_i(Fl_Round_Button*, void*);
  static void cb_btnCPP(Fl_Round_Button*, void*);
public:
  Fl_Text_Display *compilerCommandLine;
  Fl_Text_Editor *customFlags;
private:
  inline void cb_customFlags_i(Fl_Text_Editor*, void*);
  static void cb_customFlags(Fl_Text_Editor*, void*);
public:
  Fl_Check_Button *btnWrap;
private:
  inline void cb_btnWrap_i(Fl_Check_Button*, void*);
  static void cb_btnWrap(Fl_Check_Button*, void*);
public:
  Fl_Check_Button *btnScroll;
private:
  inline void cb_btnScroll_i(Fl_Check_Button*, void*);
  static void cb_btnScroll(Fl_Check_Button*, void*);
public:
  Fl_Check_Button *btnStdout;
private:
  inline void cb_btnStdout_i(Fl_Check_Button*, void*);
  static void cb_btnStdout(Fl_Check_Button*, void*);
public:
  Fl_Check_Button *btnStderr;
private:
  inline void cb_btnStderr_i(Fl_Check_Button*, void*);
  static void cb_btnStderr(Fl_Check_Button*, void*);
public:
  Fl_Text_Buffer *srcBuf; 
  Fl_Text_Buffer *asmBuf; 
  Fl_Text_Buffer *outBuf; 
  Fl_Text_Buffer *customFlagsBuf; 
  Fl_Text_Buffer *clBuf; 
};
#endif
