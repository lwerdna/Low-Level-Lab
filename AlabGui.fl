# data file for the Fltk User Interface Designer (fluid)
version 1.0303 
header_name {.h} 
code_name {.cxx}
decl {\#include "AlabLogic.h"} {private global
} 

decl {\#include "Fl_Text_Editor_Asm.h"} {public global
} 

class AlabGui {open
} {
  Function {make_window()} {open
  } {
    Fl_Window {} {
      label {Assembler Lab} open
      xywh {763 414 1032 593} type Double visible
    } {
      Fl_Text_Editor srcCode {
        xywh {4 81 510 505} align 21 textfont 4
        code0 {srcBuf = new Fl_Text_Buffer();}
        code1 {o->buffer(srcBuf);}
        code2 {srcBuf->text("testes");}
        code3 {srcBuf->add_modify_callback(onSourceModified, this);}
        class Fl_Text_Editor_Asm
      }
      Fl_Text_Editor asmCode {
        xywh {517 81 508 505} labelfont 4 labelsize 10 textfont 4 textsize 12
        code0 {asmBuf = new Fl_Text_Buffer();}
        code1 {o->buffer(asmBuf);}
        class Fl_Text_Editor
      }
      Fl_Group {} {
        label {Configuration String:} open
        xywh {5 21 1020 58} box BORDER_BOX align 5
      } {
        Fl_Output oArch {
          label {arch:}
          xywh {235 44 84 24} align 5
        }
        Fl_Output oSubArch {
          label {subarch:}
          xywh {321 44 84 24} align 5
        }
        Fl_Output oOs {
          label {os:}
          xywh {493 44 84 24} align 5
        }
        Fl_Output oEnviron {
          label {environ:}
          xywh {579 44 84 24} align 5
        }
        Fl_Output oFormat {
          label {format:}
          xywh {665 44 84 24} align 5
        }
        Fl_Input_Choice icPresets {
          label {presets:}
          callback {onConfigSelection();} open selected
          xywh {10 44 221 24} align 5
        } {}
        Fl_Output oVendor {
          label {vendor:}
          xywh {407 44 84 24} align 5
        }
      }
    }
    code {srcCode->linenumber_width(24);} {}
  }
  decl {Fl_Text_Buffer *srcBuf;} {public local
  }
  decl {Fl_Text_Buffer *asmBuf;} {public local
  }
} 

Function {} {open
} {
  code {AlabGui gui;
Fl_Double_Window *w = gui.make_window();
onGuiFinished(&gui);
Fl::add_idle(onIdle, &gui);
w->end();
w->show();
int rc = Fl::run();
onExit();
return rc;
/* fluid will insert Fl::run() here... */} {}
} 
